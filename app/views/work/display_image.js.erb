
//
//$(document).ready(function() {
//    alert('Thanks for selected_file!');
//});

var selectedImage = '<%= @selected_file %>';
console.log("IN display_image: @selected_file = " + selectedImage );

var nameImage = selectedImage.slice(0,-4) ;  // put away . file .jpr
$('.image_display h2.up').append().html(nameImage);

var pathImage = "assets/pictures/" + selectedImage;
//$('.img-center').html('<img alt="Selected Image" src="'+ pathImage + '"/>');
$(".img-center img").attr({alt: "Selected Image", src: pathImage, title: "Selected image" });
$(".image_diag .scale .small_img_box img").attr({alt: "Selected Image", src: pathImage, title: "Selected image" });
//$('.image_display .image_diag h2.down').css({"display": "none"});


var titleImage = "Click this image to analyse it";
$('.img-title').append().html(titleImage);

$('.form_select').remove('.form_select');
$('.select_image').empty().html("<%= j render 'images/button_select' -%>");


//$(document).ready(function(){

$('.img-center').click(function(event) {  //ajax
        console.log("IN display_image - in onclick function(): selected nameImage = " + nameImage );
        console.log("link clicked: selectedImage =  " + selectedImage);
        //$('.image_diag h2.down').append().html(selectedImage);
        event.stopImmediatePropagation(); // would stop the event from bubbling to parent elements,

        //$('.image_display .image_diag .indicator .outer-circle').removeClass("show");
        $('.image_display .image_diag .indicator .outer-circle').css({"display": "none"});
        $('.image_display .image_diag .scale .small_img_box').css({"display": "none"});
        $('.image_display .indic-circ').css({"display": "none"});
    $('.image_display .image_diag h2.down').css({"display": "none"});
        // not prevent other click handlers on the same element from firing.

        $.ajax({
            type: "get",
            // url: "diag_image",
            url: "analyse",
            data: { value: selectedImage },
            dataType: 'json'
        }).done(function (data_return) {
            console.log("success1c:  " + data_return.notice );

            var diagReturned = "diag_Hk: " + data_return.result_hk + "; time: " + data_return.diag_time + " ms;";
            $('.image_display .image_diag h2.down').css({"display": "block"}).empty()
                    .before().append().html(diagReturned).fadeOut(4500);
            //setTimeout("window.location.href='< %= home_path %>';",2000);; .fadeOut(4500)

            var resultHK = data_return.result_hk;
            console.log("resultHK:  " + resultHK );
            var resultColorIndicator = data_return.color_indicator;
            console.log("resultColorIndicator:  " + resultColorIndicator );

            var imgScalePos = data_return.img_scale_pos + "%";
            console.log("imgScalePos:  " + imgScalePos );

            var newLeft ;
            var newClass;
            //$('.image_display .image_diag .indicator .outer-circle').addClass('show ');
            $('.image_display .image_diag .indicator .outer-circle').css({
                "display": "block",
                "left": "43.75%",
                "border-color": resultColorIndicator
            });
            $('.image_display .indic-circ').css({
                "display": "block",
                "left": "43.75%",
                "border-color": resultColorIndicator
            });

            $('.image_display .image_diag .scale .small_img_box').css({"left": imgScalePos, "display": "block" });
            newClass = $('.image_display .image_diag .indicator .outer-circle').attr("class");
            console.log("attr: newClass = " + newClass);
            newLeft = $('.image_display .image_diag .indicator .outer-circle').css("left");
            console.log("attr border: newLeft = " + newLeft);
            //            find(".nayIt").addClass("notChosen "  // border: 30px solid #30fa29  // .delay(2000)
            $('.image_display .image_diag .scale').css({
                "display": "block"
//                "border-color": function(){
//                    return isNaN(resultHK) ? '#000' : resultHK < 200 ? '#f00' : resultHK < 350 ? '#0ff' : '#f90';
//                }
//                "border-color": indicator_color(resultHK)
//                "border-color": resultColorIndicator

            });
        })
        .fail(function (data_return) {
            console.log("error: data_return = " + data_return);
        });


});


function indicator_color(hk) {
    return isNaN(hk) ? '#000' : hk < 200 ? '#f00' : hk < 350 ? '#0f0' : '#f90';
}




//        alert('Clicked!');

//var ready;
//ready = function() {
//    console.log("Inside ready function");
//    $('.image_display').on("click", function(event) {
//        console.log("link clicked");
//    });
//};
//
//$(document).ready(ready);
//$(document).on("page:load", ready);


//var formSelect = document.querySelector(".form_select");
//console.log("IN display_image: formSelect = " + formSelect );
//var formCancel = document.querySelector(".reset");
//console.log("IN display_image: formCancel = " + formCancel );

//$(".form_select" ).submit(function( event ) {
////    alert( "Handler for .submit() called." );
//    event.preventDefault();
//    console.log("IN display_image: submit(function: formSelect = " + formSelect );
////    $('.select_image').empty('.select_image');
////    ("select_image_hide");
////    $('.select_image').empty().addClass("select_image_hide");
////    $('.form_select').empty().addClass("form_select_hide");
//    $('.form_select').remove('.form_select');
////    $(this).find(':submit').attr('disabled','disabled'); choose_from_folder
//});



//var formInput = document.querySelector(".form_input");
//$(".formCancel" ).reset(function( event ) {
////    alert( "Handler for .submit() called." );
//    console.log("IN display_image: formCancel = " + formCancel );
//
////    $('.select_image').empty('.select_image');
////    ("select_image_hide");
////    $('.select_image').empty().addClass("select_image_hide");
//
//    $('.form_select').empty().addClass("form_select_hide");
////    $('.form_select').remove('.form_select');
//
////    event.preventDefault(); link_select_image
////    $(this).find(':submit').attr('disabled','disabled'); choose_from_folder
//});
//
//$('.image_display').empty();

//    $('.take_image_link').trigger("reset");
//    $('.form_select').hide();

//$('.image_display.img-center').before().empty().html('<img alt="Logo Image" src="'+ pathImage + '"/>');
//$('.form_select').trigger("reset");

//$('.take_image_link .form_input').trigger("reset"); //   removeClass();

//$('.form_input').trigger("reset"); //   removeClass();

//$('.image_display').before().empty().append("<img>", {src: pathSelectedImage}); //#pathSelectedImage);
//$('.image_display').before().empty().append("<img>".attr('src',pathSelectedImage)); //#pathSelectedImage);
//$('.image_display').before().empty().append('img'.attr('src',pathSelectedImage)); //#pathSelectedImage);
//$('.image_display').before().empty().html("< img src=@path_selected_file  />");
//$('.image_display').before().empty().html('<img src="data:image/png;base64,' + data + '" />');
//$('.image_display').before().empty().html('<img src= "app/assets/images/pictures/' + selectedImage +'"/>');

//$('.image_display a.image').after().empty().append(imageSelected);
//$('.image_display').after().attr({ src: pathSelectedImage });


//function clearForm(form) {
//    // iterate over all of the inputs for the form
//    // element that was passed in
//    $(':input', form).each(function() {
//        var type = this.type;
//        var tag = this.tagName.toLowerCase(); // normalize case
//        // it's ok to reset the value attr of text inputs,
//        // password inputs, and textareas
//        if (type == 'text' || type == 'password' || tag == 'textarea')
//            this.value = "";
//        // checkboxes and radios need to have their checked state cleared
//        // but should *not* have their 'value' changed
//        else if (type == 'checkbox' || type == 'radio')
//            this.checked = false;
//        // select elements need to have their 'selectedIndex' property set to -1
//        // (this works for both single and multiple select elements)
//        else if (tag == 'select')
//            this.selectedIndex = -1;
//    });
//};
//$.fn.clearForm = function() {

//$(function clearForm() {
//
//    return this.each(function() {
//        var type = this.type, tag = this.tagName.toLowerCase();
//        if (tag == 'form')
//            return $(':input',this).clearForm();
//        if (type == 'text' || type == 'password' || tag == 'textarea')
//            this.value = '';
//        else if (type == 'checkbox' || type == 'radio')
//            this.checked = false;
//        else if (tag == 'select')
//            this.selectedIndex = -1;
//    });
//});

//$('.form_input').clearForm();
//$(".form_input").get(0).reset();


//$(document).ready(function(){
//    $(".field").click(function(){
//        /* Single line Reset function executes on click of Reset Button */
//        console.log(" In click field = " + this );
//        var selectedImage = "";
//        console.log(" In click field selectedImage= " + selectedImage );
//        $(".form_input").get(0).reset();
////        $(".form_input")[0].reset();
////        clearInputs();
//    });

//$('.field').change(function(){
//    console.log(" In change field = " + this );
//    $('.form_input').val('');
//
//});



//$('.form_input').change(function(){
//    console.log(" In change form_input = " + this );
//    $('.form_input').val('');
////        $(".form_input")[0].reset();
//
//});
//
