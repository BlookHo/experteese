
//
//$(document).ready(function() {
//    alert('Thanks for selected_file!');
//});

var selectedImage = '<%= @selected_file %>';
console.log("IN display_image_result: @selected_file = " + selectedImage );

var nameImage = selectedImage.slice(0,-4) ;  // put away . file .jpr
$('.image_display h2.up').append().html(nameImage);

var pathImage = "assets/pictures/" + selectedImage;
//$('.img-center').html('<img alt="Selected Image" src="'+ pathImage + '"/>');
$(".img-center img").attr({alt: "Selected Image", src: pathImage, title: "Selected image" });
$(".image_diag .scale .small_img_box img").attr({alt: "Selected Image", src: pathImage, title: "Selected image" });
$('.button__results').css({"display": "none"});


var titleImage = "Click this image to analyse it";
$('.img-title').append().html(titleImage);

$('.form_select').remove('.form_select');
$('.select_image').empty().html("<%= j render 'images/button_select' -%>");
$('.modal_list_results').html("<%= j render 'images/button_list_results' -%>");

//$( ".img-center").unbind( "click" );

//$(document).ready(function(){

$('.img-center').unbind( "click" ).click(function result(event) {  //ajax
    console.log("IN display_image_result - in onclick function(): selected nameImage = " + nameImage );
    console.log("link clicked: selectedImage =  " + selectedImage);
    //$('.image_diag h2.down').append().html(selectedImage);
    event.stopImmediatePropagation(); // would stop the event from bubbling to parent elements,

    //$('.image_display .image_diag .indicator .outer-circle').removeClass("show");
    $('.image_display .image_diag .indicator .outer-circle').css({"display": "none"});
    $('.image_display .image_diag .scale .small_img_box').css({"display": "none"});
    $('.image_display .indic-circ').css({"display": "none"});
    $('.image_display .image_diag h2.down').css({"display": "none"});
    // not prevent other click handlers on the same element from firing.
    $('.img-left-side .button__results').css({"display": "none"});

    $.ajax({
        type: "get",
        // url: "diag_image",
        url: "image_analyse_result",
        data: { value: selectedImage },
        dataType: 'json'
    }).done(function (data_return) {
        console.log("success Image from Folder Analyse:  " + data_return.notice );

        var diagReturned = "diag_Hk: " + data_return.result_hk + "; time: " + data_return.diag_time + " ms;";
        $('.image_display .image_diag h2.down').css({"display": "block"}).empty()
                .before().append().html(diagReturned).fadeOut(5000);
        //setTimeout("window.location.href='< %= home_path %>';",2000);; .fadeOut(4500)

        var resultHK = data_return.result_hk;
        console.log("resultHK:  " + resultHK );
        var resultColorIndicator = data_return.color_indicator;
        console.log("resultColorIndicator:  " + resultColorIndicator );

        var imgScalePos = data_return.img_scale_pos + "%";
        console.log("imgScalePos:  " + imgScalePos );

        var newLeft ;
        var newClass;
        //$('.image_display .image_diag .indicator .outer-circle').addClass('show ');
        $('.image_display .image_diag .indicator .outer-circle').css({
            "display": "block",
            "left": "43.75%",
            "border-color": resultColorIndicator
        });
        $('.image_display .indic-circ').css({
            "display": "block",
            "left": "43.75%",
            "border-color": resultColorIndicator
        });

        $('.image_display .image_diag .scale .small_img_box').css({"left": imgScalePos, "display": "block" });
//        newClass = $('.image_display .image_diag .indicator .outer-circle').attr("class");
//        console.log("attr: newClass = " + newClass);
//        newLeft = $('.image_display .image_diag .indicator .outer-circle').css("left");
//        console.log("attr border: newLeft = " + newLeft);
        //            find(".nayIt").addClass("notChosen "  // border: 30px solid #30fa29  // .delay(2000)
        $('.image_display .image_diag .scale').css({
            "display": "block"
//                "border-color": function(){
//                    return isNaN(resultHK) ? '#000' : resultHK < 200 ? '#f00' : resultHK < 350 ? '#0ff' : '#f90';
//                }
//                "border-color": indicator_color(resultHK)
//                "border-color": resultColorIndicator

        });
    })
            .fail(function (data_return) {
                console.log("error: data_return = " + data_return);
            });


});


function indicator_color(hk) {
    return isNaN(hk) ? '#000' : hk < 200 ? '#f00' : hk < 350 ? '#0f0' : '#f90';
}


